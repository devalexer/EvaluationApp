@*@model IEnumerable<EvaluationApp.Models.Questions>*@


@model string

<style>
    body {
        margin: 0px;
        padding: 0px;
    }

    .msg {
        position: absolute;
        top: 0;
        bottom: 30px;
        border: 1px solid green;
        margin-bottom: auto;
        display: block;
        overflow: scroll;
        width: 100%;
        white-space: nowrap;
    }
</style>
<div class="msg">
    <div style="position:absolute; bottom:0;" id="msgs"></div>
</div>

<div style="position:absolute;height:20px;bottom:10px;left:0; display:block;width:100%">
    <input type="text" style="max-width:unset;width:100%;max-width:100%" id="MessageField" placeholder="type message and press enter" />
</div>

@section Scripts {
    <script>
    $(function () {
        var userName = '@Model';

        var protocol = location.protocol === "https:" ? "wss:" : "ws:";
        var wsUri = protocol + "//" + window.location.host;
        var socket = new WebSocket(wsUri);
        socket.onopen = e => {
            console.log("socket opened", e);
        };

        socket.onclose = function (e) {
            console.log("socket closed", e);
        };

        socket.onmessage = function (e) {
            console.log(e);
            $('#msgs').append(e.data + '<br />');
        };

        socket.onerror = function (e) {
            console.error(e.data);
        };

        $('#MessageField').keypress(function (e) {
            if (e.which != 13) {
                return;
            }

            e.preventDefault();

            var message = userName + ": " + $('#MessageField').val();
            socket.send(message);
            $('#MessageField').val('');
        });
    });
    </script>
}



@*Student comments will be displayed here using real-time updates
via a combination of websockets and 3d charts/google charts*@

@*<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model.TimeAsked)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.QuestionText)
                </th>
            <th>
                @Html.DisplayNameFor(model => model.Students)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TimeAsked)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuestionText)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Students.Id)
            </td>
        </tr>
}
    </tbody>
</table>*@
